# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import git_pb2 as git__pb2


class GitStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CreateAndInitDirectory = channel.unary_unary(
        '/git.Git/CreateAndInitDirectory',
        request_serializer=git__pb2.RequestPath.SerializeToString,
        response_deserializer=git__pb2.ResponseResult.FromString,
        )
    self.AddOrUpdateFile = channel.unary_unary(
        '/git.Git/AddOrUpdateFile',
        request_serializer=git__pb2.RequestFile.SerializeToString,
        response_deserializer=git__pb2.ResponseResult.FromString,
        )
    self.GetRepoTree = channel.unary_unary(
        '/git.Git/GetRepoTree',
        request_serializer=git__pb2.RequestPath.SerializeToString,
        response_deserializer=git__pb2.ResponseTree.FromString,
        )
    self.RenderTree = channel.unary_unary(
        '/git.Git/RenderTree',
        request_serializer=git__pb2.RequestHash.SerializeToString,
        response_deserializer=git__pb2.ResponseTree.FromString,
        )


class GitServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def CreateAndInitDirectory(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AddOrUpdateFile(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetRepoTree(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RenderTree(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_GitServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CreateAndInitDirectory': grpc.unary_unary_rpc_method_handler(
          servicer.CreateAndInitDirectory,
          request_deserializer=git__pb2.RequestPath.FromString,
          response_serializer=git__pb2.ResponseResult.SerializeToString,
      ),
      'AddOrUpdateFile': grpc.unary_unary_rpc_method_handler(
          servicer.AddOrUpdateFile,
          request_deserializer=git__pb2.RequestFile.FromString,
          response_serializer=git__pb2.ResponseResult.SerializeToString,
      ),
      'GetRepoTree': grpc.unary_unary_rpc_method_handler(
          servicer.GetRepoTree,
          request_deserializer=git__pb2.RequestPath.FromString,
          response_serializer=git__pb2.ResponseTree.SerializeToString,
      ),
      'RenderTree': grpc.unary_unary_rpc_method_handler(
          servicer.RenderTree,
          request_deserializer=git__pb2.RequestHash.FromString,
          response_serializer=git__pb2.ResponseTree.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'git.Git', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
